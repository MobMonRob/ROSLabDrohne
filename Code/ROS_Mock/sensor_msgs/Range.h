// Generated by gencpp from file sensor_msgs/Range.msg
// DO NOT EDIT!


#ifndef SENSOR_MSGS_MESSAGE_RANGE_H
#define SENSOR_MSGS_MESSAGE_RANGE_H


#include <string>
#include <vector>
#include <map>

#include "../std_msgs/Msg.h"

namespace sensor_msgs
{
    class Range : public Msg
    {
    public:

        Range() : Msg(), radiation_type(0), field_of_view(0.0), min_range(0.0), max_range(0.0), range(0.0) {};
        Range(const Range& _alloc) : Msg(), radiation_type(0), field_of_view(0.0), min_range(0.0), max_range(0.0), range(0.0) {};

        int radiation_type;
        float field_of_view;
        float min_range;
        float max_range;
        float range;

        typedef sensor_msgs::Range* Ptr;
        typedef sensor_msgs::Range* ConstPtr;
        typedef sensor_msgs::Range* RangePtr;
        typedef sensor_msgs::Range* RangeConstPtr;

        std::ostream& operator<<(std::ostream& s)
        {

            return s;
        };
        bool operator==(const ::sensor_msgs::Range& rhs)
        {
            return this->radiation_type == rhs.radiation_type &&
                this->field_of_view == rhs.field_of_view &&
                this->min_range == rhs.min_range &&
                this->max_range == rhs.max_range &&
                this->range == rhs.range;
        };
        bool operator!=(const ::sensor_msgs::Range& rhs)
        {
            return !(*this == rhs);
        };
    }; // Range
} // namespace sensor_msgs


#endif // SENSOR_MSGS_MESSAGE_RANGE_H
