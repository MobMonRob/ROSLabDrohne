// Generated by gencpp from file sensor_msgs/Imu.msg
// DO NOT EDIT!


#ifndef SENSOR_MSGS_MESSAGE_IMU_H
#define SENSOR_MSGS_MESSAGE_IMU_H


#include <string>
#include <vector>
#include <map>

#include "../geometry_msgs/Quaternion.h"
#include "../geometry_msgs/Vector3.h"
#include "../geometry_msgs/Vector3.h"

#include "../std_msgs/Msg.h"

namespace sensor_msgs
{

    class Imu : public Msg
    {
    public:
        Imu() : Msg() {};
        Imu(const Imu& _alloc)
            : Msg()
            , orientation(_alloc.orientation)
            , angular_velocity(_alloc.angular_velocity)
            , linear_acceleration(_alloc.linear_acceleration) {};

        geometry_msgs::Quaternion orientation;
        geometry_msgs::Vector3 angular_velocity;
        geometry_msgs::Vector3 linear_acceleration;

        static sensor_msgs::Imu* Ptr;
        typedef sensor_msgs::Imu* ConstPtr;
        static sensor_msgs::Imu* ImuPtr;
        static sensor_msgs::Imu* ImuConstPtr;

        std::ostream& operator<<(std::ostream& s)
        {
            return s;
        };
        bool operator==(const ::sensor_msgs::Imu& rhs)
        {
            return this->orientation == rhs.orientation &&
                this->angular_velocity == rhs.angular_velocity &&
                this->linear_acceleration == rhs.linear_acceleration;
        };
        bool operator!=(const ::sensor_msgs::Imu& rhs)
        {
            return !(*this == rhs);
        };
    }; // Imu
} // namespace sensor_msgs

#endif // SENSOR_MSGS_MESSAGE_IMU_H
