// Generated by gencpp from file mavros_msgs/PositionTarget.msg
// DO NOT EDIT!


#ifndef MAVROS_MSGS_MESSAGE_POSITIONTARGET_H
#define MAVROS_MSGS_MESSAGE_POSITIONTARGET_H


#include <string>
#include <vector>
#include <map>

#include "../std_msgs/Msg.h"
#include "../geometry_msgs/Point.h"
#include "../geometry_msgs/Vector3.h"

namespace mavros_msgs
{
class PositionTarget : public Msg
{
public:
    PositionTarget()
        : Msg()
        , coordinate_frame(0)
        , type_mask(0)
        , position()
        , velocity()
        , acceleration_or_force()
        , yaw(0.0)
        , yaw_rate(0.0) {};
  PositionTarget(const PositionTarget& _alloc)
      : Msg()
      , coordinate_frame(0)
      , type_mask(0)
      , position(_alloc.position)
      , velocity(_alloc.velocity)
      , acceleration_or_force(_alloc.acceleration_or_force)
      , yaw(0.0)
      , yaw_rate(0.0) {};


    int coordinate_frame;
    int type_mask;
    geometry_msgs::Point position;
    geometry_msgs::Vector3 velocity;
    geometry_msgs::Vector3 acceleration_or_force;
    float yaw;
    float yaw_rate;



// reducing the odds to have name collisions with Windows.h 
#if defined(_WIN32) && defined(FRAME_LOCAL_NED)
  #undef FRAME_LOCAL_NED
#endif
#if defined(_WIN32) && defined(FRAME_LOCAL_OFFSET_NED)
  #undef FRAME_LOCAL_OFFSET_NED
#endif
#if defined(_WIN32) && defined(FRAME_BODY_NED)
  #undef FRAME_BODY_NED
#endif
#if defined(_WIN32) && defined(FRAME_BODY_OFFSET_NED)
  #undef FRAME_BODY_OFFSET_NED
#endif
#if defined(_WIN32) && defined(IGNORE_PX)
  #undef IGNORE_PX
#endif
#if defined(_WIN32) && defined(IGNORE_PY)
  #undef IGNORE_PY
#endif
#if defined(_WIN32) && defined(IGNORE_PZ)
  #undef IGNORE_PZ
#endif
#if defined(_WIN32) && defined(IGNORE_VX)
  #undef IGNORE_VX
#endif
#if defined(_WIN32) && defined(IGNORE_VY)
  #undef IGNORE_VY
#endif
#if defined(_WIN32) && defined(IGNORE_VZ)
  #undef IGNORE_VZ
#endif
#if defined(_WIN32) && defined(IGNORE_AFX)
  #undef IGNORE_AFX
#endif
#if defined(_WIN32) && defined(IGNORE_AFY)
  #undef IGNORE_AFY
#endif
#if defined(_WIN32) && defined(IGNORE_AFZ)
  #undef IGNORE_AFZ
#endif
#if defined(_WIN32) && defined(FORCE)
  #undef FORCE
#endif
#if defined(_WIN32) && defined(IGNORE_YAW)
  #undef IGNORE_YAW
#endif
#if defined(_WIN32) && defined(IGNORE_YAW_RATE)
  #undef IGNORE_YAW_RATE
#endif

  enum {
    FRAME_LOCAL_NED = 1u,
    FRAME_LOCAL_OFFSET_NED = 7u,
    FRAME_BODY_NED = 8u,
    FRAME_BODY_OFFSET_NED = 9u,
    IGNORE_PX = 1u,
    IGNORE_PY = 2u,
    IGNORE_PZ = 4u,
    IGNORE_VX = 8u,
    IGNORE_VY = 16u,
    IGNORE_VZ = 32u,
    IGNORE_AFX = 64u,
    IGNORE_AFY = 128u,
    IGNORE_AFZ = 256u,
    FORCE = 512u,
    IGNORE_YAW = 1024u,
    IGNORE_YAW_RATE = 2048u,
  };


    typedef mavros_msgs::PositionTarget* Ptr;
    typedef mavros_msgs::PositionTarget* ConstPtr;
    typedef mavros_msgs::PositionTarget* PositionTargetPtr;
    typedef mavros_msgs::PositionTarget* PositionTargetConstPtr;

    std::ostream& operator<<(std::ostream& s)
    {
        return s;
    }
bool operator==(const mavros_msgs::PositionTarget& rhs)
{
    return this->coordinate_frame == rhs.coordinate_frame &&
        this->type_mask == rhs.type_mask &&
        this->position == rhs.position &&
        this->velocity == rhs.velocity &&
        this->acceleration_or_force == rhs.acceleration_or_force &&
        this->yaw == rhs.yaw &&
        this->yaw_rate == rhs.yaw_rate;
}
bool operator!=(const mavros_msgs::PositionTarget& rhs)
{
    return !(*this == rhs);
}

}; // struct PositionTarget_




// constants requiring out of line definition

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   

   





} // namespace mavros_msgs
#endif // MAVROS_MSGS_MESSAGE_POSITIONTARGET_H
